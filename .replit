modules = ["python-3.11", "nodejs-20"]

[nix]
channel = "stable-24_05"

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "CloneAndRunScript"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "DefiProject"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "DefiBlockchain"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "DefiServer"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "HardhatNode"

[[workflows.workflow]]
name = "CloneAndRunScript"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python clone_and_run.py"

[[workflows.workflow]]
name = "DefiProject"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd defiprogess && npx tsx server/index.ts"
waitForPort = 5000

[[workflows.workflow]]
name = "DefiBlockchain"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd defiprogess && node blockchain-server.cjs"
waitForPort = 5000

[[workflows.workflow]]
name = "DefiServer"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd defiprogess && node server-direct.cjs"
waitForPort = 5000

[[workflows.workflow]]
name = "HardhatNode"
author = "agent"

[workflows.workflow.metadata]
agentRequireRestartOnSave = false

[[workflows.workflow.tasks]]
task = "packager.installForAll"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "cd defiprogess/contracts && npx hardhat node"
waitForPort = 8545

[deployment]
run = ["sh", "-c", "python clone_and_run.py"]

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 8545
externalPort = 3000
